#!/bin/bash

# load last directory location and cd into it :
[ -f ~/.config/zsh/.bash_lastdir ] && [ -e "$(cat ~/.config/zsh/.bash_lastdir)" ] && lastdir=$(cat ~/.config/zsh/.bash_lastdir)

## FUNCTIONS :

# save pwd on change directory :
function cd() {
	lastdir=$(pwd)
	builtin cd $@ && echo $(pwd) > ~/.config/zsh/.bash_lastdir && ls
}

function path_print() {
	tmpPath=$PATH
	buffer=$(echo $tmpPath | tr ":" "\n")
	for i in "${buffer[@]}"
	do
		echo $i
	done
}

function path_sorted() {
	tmpPath=$(path_print)
	echo "${tmpPath}" | sort
}

# smart cat:
function cat() {
	if [[ "$#" -eq 1 ]]; then
		local extToLower=$(echo $1 | awk -F . '{if (NF>1) {print }}')
		if [[ ( $extToLower == *.png ) || ( $extToLower == *.jpg ) || ( $extToLower == *.jpeg ) || ( $extToLower == *.bmp ) || ( $extToLower == *.svg ) ]]; then
			command kitty +kitten icat "$@"
			return
		elif [[ ( $extToLower == *.md ) ]]; then
			command mdcat "$@"
			return
		fi
	fi

	command cat "$@"
}

# git :
function git() {
	if [[ ( $# == 1 ) && ( $1 == "log" ) ]]; then
		command git log --graph --pretty=oneline --abbrev-commit --color=always
	else
		command git "$@"
	fi
}

# Compress and encrypt with password using zip:
function zip_with_pass() {
	# $1 -> destination zip file
	# $2 -> source folder
	zip -re $2 $1
}

# Note management:
function note_create() {
	# command 1 search for all directories in ~/notes. If there are no directories print "",which is a hack to make the next command work.
	# command 2 add an option for new notes directory
	# command 3 actual fzf command
	local result=$(fd --type=directory . ~/notes | (grep . || echo "") | awk 'NR==1{print "new directory"}1' | fzf -m)

	if [[ -z $result ]]; then
		echo Canceled
		return
	fi

	local note_dir=""
	local note_name=""
	local tmp=""

	if [[ "$result" == "new directory" ]]; then
		vared -p "Enter directory name: " -c tmp
		note_dir=$(echo ~/notes/$tmp)
		echo Creating directory: $note_dir
		mkdir -p $note_dir
	else
		note_dir=$result
	fi

	tmp=""
	vared -p "Enter note name: " -c tmp
	note_name=$(echo $tmp)
	echo Creating note file: $note_dir/$note_name
	micro $note_dir/$note_name
}

# Clean zsh history file
function clean_history () {
	local tmp_hist_file=$(printf "$HISTFILE"_tmp)
	cat $HISTFILE | sed '/Microsoft-MIEngine/d' | awk '!x[$0]++' > tmp_hist_file && cat tmp_hist_file > $HISTFILE && rm tmp_hist_file
}

# FZF functionality
[ -f ~/.config/zsh/.fzf_functionality.zsh ] && source ~/.config/zsh/.fzf_functionality.zsh
